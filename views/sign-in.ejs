<!DOCTYPE html>
<html>

<head>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
    <title>Tiendas Daka</title>
    <style>
        .color {
            height: 30vh;
            background-color: aqua;
        }

        .color1 {
            text-align: justify;
            color: black;
            justify-content: center;
        }

        .loading {
            height: 100vh;
            width: 100vw;
            background-color: rgb(26, 19, 96);
            position: fixed;
            z-index: 2;

            display: flex;
            justify-content: center;
            align-items: center;

        }

        .cart {
            display: block;
            margin: 0 auto 1.5em auto;
            width: 12em;
            height: 12em;
        }

        .imglod {
            height: 100px;
            width: 100px;
            border-radius: 50%;
        }
    </style>
    <link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/@mdi/font@6.x/css/materialdesignicons.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.min.css" rel="stylesheet">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, minimal-ui">
</head>

<body class="noscroll invertDaka">

    <div id="app">
        <v-app>

            <div class="fill-height">
                <v-dialog persistent v-model="modal.quienes" transition="dialog-bottom-transition" max-width="600">

                    <template v-slot:default="dialog">
                        <v-card>
                            <v-toolbar color="#143E8F" dark>Verifica tu identidad</v-toolbar>
                            <v-card-text>

                                <div id="map" class="map">
                                    <form ref="form" @submit.prevent="forgotPassword()">
                                        <div style="display: flex;justify-content: center;align-items: center;">
                                            <v-text-field v-model="email" name="email" label="Email" type="text"
                                                placeholder="Email" required></v-text-field>
                                            <v-col cols="auto" align="center" justify="center">

                                                <v-btn type="submit" class="mt-4"
                                                    style="background-color: #192b55; color: white; width: 100%;"
                                                    value="log in" size="x-large">Enviar token</v-btn>
                                            </v-col>
                                        </div>

                                        <span> {{ respVerification }}</span>


                                    </form>

                                    <v-card-actions>
                                        <div class="d-flex flex-colum w-100 align-end justify-end">
                                            <!--v-sheet>
                                                    <span style="color: #192b55;"
                                                        @click.self="recoveryPassword($event)">Ingresar token</span>
                                                </v-sheet-->
                                            <template>
                                                <v-otp-input v-model="otp" :length="length" filled></v-otp-input>
                                            </template>


                                        </div>
                                    </v-card-actions>
                                    <form ref="form" @submit.prevent="newPassword()" v-if="seeChangePassword">
                                        <v-text-field v-model="password" name="password" label="New Password"
                                            type="password" placeholder="password" required></v-text-field>

                                        <v-text-field v-model="passwordcheck" name="passwordcheck"
                                            label="Confirm Password" type="password" placeholder="password"
                                            required></v-text-field>


                                        <v-col cols="auto" align="center" justify="center">
                                            <v-btn type="submit" class="mt-4"
                                                style="background-color: #192b55; color: white; width: 100%;"
                                                value="log in" size="x-large">Cambiar contraseña</v-btn>
                                        </v-col>

                                    </form>
                                </div>


                                <div id="info"></div>
                            </v-card-text>
                            <v-card-actions class="justify-end">
                                <v-btn text @click="modal.quienes = false">Close</v-btn>
                            </v-card-actions>
                        </v-card>
                    </template>
                </v-dialog>
                <v-row class="fill-height" justify="center" v-if="seeRegister" style="padding: 10px;">
                    <v-col cols="6" v-for="n in 1" :key="n">
                        <v-sheet style="background: whitesmoke !important; width: 100%;">
                            <v-card class="elevation-12">
                                <v-img src="../img/channels4_banner.jpg" contain></v-img>
                                <div class="d-flex justify-center pa-2">

                                    <v-card-title>
                                        Registro
                                    </v-card-title>
                                </div>


                                <v-divider></v-divider>

                                <v-card-text>


                                    <ul>
                                        <li v-for="error in errors.all()">{{ error }}</li>
                                    </ul>


                                    <form ref="form" @submit.prevent="register()" class="w-full">

                                        <v-text-field v-validate.continues="'required|alpha|min:5'"
                                            prepend-icon="mdi-account" v-model="username" name="username"
                                            label="Username" type="text" placeholder="username" required></v-text-field>
                                        <v-text-field v-validate.continues="'required|alpha|min:5'"
                                            prepend-icon="mdi-account" v-model="lastname" name="lastname"
                                            prepend-icon="mdi-account" label="Lastname" type="text"
                                            placeholder="lastname" required></v-text-field>
                                        <v-text-field v-model="email" prepend-icon="mdi-mail" name="email"
                                            label="Email" type="text" placeholder="email" required></v-text-field>

                                        <v-text-field v-validate="'required'" prepend-icon="mdi-lock" ref="password"
                                            v-model="password" name="password" label="Password" type="password"
                                            placeholder="password" required></v-text-field>
                                        <v-text-field v-validate="'required|confirmed:password'" prepend-icon="mdi-lock"
                                            v-model="passwordcheck" name="passwordcheck" label="Repeat Password"
                                            type="password" placeholder="passwordcheck" required>
                                            <span v-show="errors.has('password_confirmation')" class="help is-danger">{{
                                                errors.first('password_confirmation')
                                                }}</span></v-text-field>

                                        <v-col cols="auto" align="center" justify="center">

                                            <v-btn type="submit" class="mt-4"
                                                style="background-color: #192b55; color: white; width: 100%;"
                                                value="log in" size="x-large">Registrar</v-btn>
                                        </v-col>

                                        <div class="d-flex flex-colum"
                                            style="display: flex; flex-direction: column; justify-content: center; align-items: center;width: 100%;">
                                            <v-sheet>
                                                <span @click.self="setSeeLogin()">Iniciar Sesión</span>
                                            </v-sheet>



                                        </div>
                                    </form>
                                </v-card-text>
                            </v-card>
                        </v-sheet>
                    </v-col>


                </v-row>
                <v-row class="fill-height" align="center" justify="center">

                    <v-col cols="6" class="invertDaka" style="width: 50%; display: flex;justify-content: center; align-items: center;">
                        <v-card class="elevation-12" style="width: 70%;">
                            <v-img src="../img/channels4_banner.jpg" contain></v-img>
                            <div class="d-flex justify-center pa-2">

                                <v-card-title>
                                    Iniciar Sesión
                                </v-card-title>
                            </div>


                            <v-divider></v-divider>

                            <v-card-text>
                                <input type="text" name="first" v-validate.continues="'required|alpha|min:5'">

                                <input type="text" name="second" v-validate.continues="'required|alpha|min:5'">

                                <ul>
                                    <li v-for="error in errors.all()">{{ error }}</li>
                                </ul>
                                <span>{{ messageProcess }}</span>

                                <form ref="form" @submit.prevent="login()">
                                    <v-text-field v-model="email" name="email" label="Email" type="text"
                                        placeholder="Email" required></v-text-field>

                                    <v-text-field v-model="password" name="password" label="Password" type="password"
                                        placeholder="password" required></v-text-field>

                                    <!--div class="d-flex flex-colum w-100 align-end justify-end">
                                        <v-sheet>
                                            <span style="color: #192b55;" @click.self="recoveryPassword($event)">Olvidé
                                                mi contraseña</span>
                                        </v-sheet>
                                    </div-->


                                    <v-col cols="auto" align="center" justify="center">

                                        <v-btn type="submit" class="mt-4"
                                            style="background-color: #192b55; color: white; width: 100%;" value="log in"
                                            size="x-large">Login</v-btn>
                                    </v-col>


                                </form>
                                <div class="d-flex flex-colum"
                                    style="display: flex; flex-direction: column; justify-content: center; align-items: center;width: 100%;">
                                    <v-sheet>
                                        <span @click.self="setSeeRegister()">Crear cuenta</span>
                                    </v-sheet>



                                </div>


                            </v-card-text>
                        </v-card>


                    </v-col>
                </v-row>

            </div>
            <!--v-main  class="invertDaka">
                <v-row
                align="start"
                style="height: 800px;"
                no-gutters
              >
                    <v-col cols="8" class="invertDaka">
                        <v-sheet class="invertDaka">
                            <v-layout row wrap align-center justify class="invertDaka" style="display:flex;padding: 25px;align-items: center;">
                                <v-flex xs12 sm8 md4>
                                <v-card class="elevation-12">
                                    <v-toolbar dark color="primary">
                                        <v-toolbar-title>Login form</v-toolbar-title>
                                    </v-toolbar>
                                    <v-card-text>
                                        <form ref="form" @submit.prevent="login()">
                                            <v-text-field v-model="username" name="username" label="Username" type="text"
                                                placeholder="username" required></v-text-field>
    
                                            <v-text-field v-model="password" name="password" label="Password"
                                                type="password" placeholder="password" required></v-text-field>
                                            <v-btn type="submit" class="mt-4" color="primary" value="log in">Login</v-btn>
                                        </form>
                                    </v-card-text>
                                </v-card>
    
                            </v-flex>
                                <v-flex xs12 sm8 md4>
                                    <v-card class="elevation-12" style="padding: 10px;">
                                        <div class="pa-2" style="display: flex; justify-content: center" >
                                            <v-toolbar-title>Register form</v-toolbar-title>

                                        </div>
                                        
                                        <v-card-text>
                                            <input type="text" name="first"
                                                v-validate.continues="'required|alpha|min:5'">

                                            <input type="text" name="second"
                                                v-validate.continues="'required|alpha|min:5'">

                                            <ul>
                                                <li v-for="error in errors.all()">{{ error }}</li>
                                            </ul>
                                            <form ref="form" @submit.prevent="register()" class="w-full">

                                                <v-text-field v-validate.continues="'required|alpha|min:5'"
                                                    v-model="username" name="username" label="Username" type="text"
                                                    placeholder="username" required></v-text-field>
                                                <v-text-field v-validate.continues="'required|alpha|min:5'"
                                                    v-model="lastname" name="lastname" label="Lastname" type="text"
                                                    placeholder="lastname" required></v-text-field>
                                                <v-text-field v-model="email" name="email" label="Lastname" type="text"
                                                    placeholder="email" required></v-text-field>

                                                <v-text-field v-validate="'required'" ref="password" v-model="password"
                                                    name="password" label="Password" type="text" placeholder="password"
                                                    required></v-text-field>
                                                <v-text-field v-validate="'required|confirmed:password'"
                                                    v-model="passwordcheck" name="passwordcheck" label="Repeat Password"
                                                    type="text" placeholder="passwordcheck" required>
                                                    <span v-show="errors.has('password_confirmation')"
                                                        class="help is-danger">{{ errors.first('password_confirmation')
                                                        }}</span></v-text-field>
                                                <v-btn type="submit" class="mt-4" color="primary"
                                                    value="log in">Registrar</v-btn>
                                            </form>
                                        </v-card-text>
                                    </v-card>

                                </v-flex>

                            </v-layout>
                        </v-sheet>
                    </v-col>
                    <v-col cols="4">
                        <v-sheet class="pa-2">
                            <v-layout align-center>

                            </v-layout>
                        </v-sheet>
                    </v-col>
                </v-row>
            </v-main-->
        </v-app>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vee-validate/2.2.9/vee-validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@vee-validate/rules@4.4.7/dist/vee-validate-rules.min.js"></script>

    <script>
        Vue.use(VeeValidate); // good to go.
    </script>
    <script>
        new Vue({
            el: '#app',
            vuetify: new Vuetify(),
            data() {
                return {
                    username: "",
                    password: "",
                    lastname: "",
                    password: "",
                    passwordcheck: "",
                    email: "",
                    seeChangePassword: false,
                    seeRegister: false,
                    seeLogin: true,
                    messageProcess: "",
                    viewMessage: false,
                    otp: "",
                    respVerification: "",
                    length: 6,
                    modal: {
                        servicios: false,
                        quienes: false
                    },
                };
            },
            computed: {
                isActive() {

                    if (this.otp.length === this.length) {
                        this.seeChangePassword = true
                        this.sendToken()
                    }

                },
            },
            watch: {
                otp: function () {
                    if (this.otp.length === this.length) {
                        this.seeChangePassword = true
                        this.sendToken()
                    }

                },
            },
            methods: {
                setSeeRegister() {
                    this.seeLogin = false
                    this.seeRegister = true;
                },
                setSeeLogin() {
                    this.seeLogin = true
                    this.seeRegister = false;
                },
                recoveryPassword() {
                    this.modal.quienes = !this.modal.quienes
                },
                setMessageProcess(message) {
                    this.messageProcess = message
                    this.viewMessage = true
                },
                async register() {
                    const { username, lastname, password, email, } = this;
                    console.log(username + "logged in")
                    fetch('/user/register', {
                        method: "POST",
                        body: JSON.stringify({
                            "name": username,
                            "lastname": lastname,
                            "email": email,
                            "password": password,
                            "oldPassword": "20242024",
                            "newPassword": "20242024"
                        }),
                        headers: {
                            "Content-Type": "application/json",

                        },
                    })
                        .then((response) => {
                            response.json().then((data) => {
                                console.log('data', data)
                            });

                        })
                        .catch((err) => {
                            console.error(err);
                        });
                },
                async sendToken() {
                    const { otp, email } = this;
                    console.log(email + "logged in")
                    fetch('/user/validate', {
                        method: "POST",
                        body: JSON.stringify({
                            "email": email,
                            "otp": otp
                        }),
                        headers: {
                            "Content-Type": "application/json",

                        },
                    })
                        .then((response) => {
                            console.log('response', JSON.parse(response.status))
                            this.seeChangePassword = true
                        })
                        .catch((err) => {
                            console.error(err);
                        });
                },
                async forgotPassword() {
                    const { email } = this;
                    console.log(email + "logged in")

                    try {
                        const req = await fetch('/user/resetPasssword', {
                            method: "POST",
                            body: JSON.stringify({
                                "email": email,
                            }),
                            headers: {
                                "Content-Type": "application/json",

                            },
                        })

                        this.respVerification = req.status == 400 ? 'El email ingresado no fue encontrado' : 'Se ha enviado el token...';
                    } catch (err) {
                        consol.elog('err')

                    }

                },
                async newPassword() {
                    const { email, otp, password } = this;

                    await fetch('/user/newPassword', {
                        method: "POST",
                        body: JSON.stringify({
                            "email": email,
                            "otp": otp,
                            "password": password
                        }),
                        headers: {
                            "Content-Type": "application/json",

                        },
                    }).then((
                        response
                    ) => {
                        console.log('response', response, response.ok)
                        let that = this
                        if (response.ok) {

                            this.setMessageProcess('Se cambio la contraseña exitosamente')
                            setTimeout(() => {
                                this.recoveryPassword()
                            }, 2000);

                        } else {
                            messageProcess = 'Error en el cambio de contraseña'
                        }

                    });








                },
                async login() {
                    const { email, password } = this;
                    console.log(email + "logged in")
                    var token = '';
                    fetch('/user/login', {
                        method: "POST",
                        body: JSON.stringify({
                            "email": email,
                            "password": password,
                            "oldPassword": "20242024",
                            "newPassword": "20242024"
                        }),
                        headers: {
                            "Content-Type": "application/json",

                        },
                    })
                        .then((response) => {
                            console.log('respooonseee', response)
                            response.json().then(async (data) => {
                                token = data.token
                                localStorage.setItem("accessToken", data.token);
                                const article = { title: "Vue POST Request Example" };
                                const headers = {
                                    "Authorization": token,
                                    "My-Custom-Header": "foobar"
                                };

                                fetch('/repuestos', {
                                    method: "GET",
                                    headers: {
                                        "Content-Type": "application/json",

                                    },
                                })

                                window.location.reload(true);

                            });



                        })
                        .catch((err) => {

                            //window.location.href = 'http://localhost:81/repuestos/',
                            console.error(err);
                        });



                }
            },
            setToken(respVerification) {
                this.respVerification = respVerification.message
            },
            checkForm: function (e) {
                if (this.name && this.password) {
                    return true;
                }

                this.errors = [];

                if (!this.name) {
                    this.errors.push('Name required.');
                }
                if (!this.age) {
                    this.errors.push('Password required.');
                }

                e.preventDefault();
            }
        })
    </script>


    </script>
</body>

</html>